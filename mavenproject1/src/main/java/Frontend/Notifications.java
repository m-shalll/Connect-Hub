/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import Backend.AccountManagement;
import Backend.FriendManagement;
import Backend.User;
import Backend.notifications.FriendRequests;
import Backend.notifications.Notification;
import Backend.notifications.NotificationManager;
import java.awt.Dimension;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author Dell
 */
public class Notifications extends javax.swing.JFrame {
    private JFrame notificationsFrame;
    private JPanel notificationsContainer;
    private ArrayList<Notification> notifications;
    public ArrayList<User> users=LogInPannel.users;
    public User targetUser =LogInPannel.logIn;
    private FeedWindow feed;
    private FriendManagement f= new FriendManagement();
    private AccountManagement m=new AccountManagement();
    public Notifications(FeedWindow feed) throws IOException {
        initComponents();
        this.feed = feed;
        jPanel1.setLayout(new java.awt.GridLayout(0, 1, 0, 2)); 

        jPanel1.revalidate();
        jPanel1.repaint();
        getNotifications();
        loadNotifications();
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Notifications");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));
        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(427, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addContainerGap(271, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
      feed.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void getNotifications() throws IOException {
        NotificationManager manager = new NotificationManager();
        ArrayList<Notification> all = manager.load();
        this.notifications = new ArrayList<>(); 

        for (Notification notification : all) {
            if (notification.getUserId().equals(this.targetUser.getUserId())) {
                this.notifications.add(notification);
            }
        }
    }
    private void loadNotifications() {
    jPanel1.removeAll();
    jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

    for (Notification notification : this.notifications) {
        JPanel notificationPanel = new JPanel();
        NotificationManager manager = new NotificationManager();
        notificationPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 5, 5)); 
        notificationPanel.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5)); 
        JTextField notificationField = new JTextField(notification.getMessage());
        notificationField.setEditable(false);
        notificationField.setPreferredSize(new Dimension(250, 30)); 
        notificationPanel.add(notificationField);
        JButton deleteButton = new JButton("Delete");
        deleteButton.setPreferredSize(new Dimension(80, 30));
        if(notification instanceof FriendRequests){
            JButton acceptButton = new JButton("Accept");
            JButton declineButton = new JButton("Decline");
            acceptButton.setPreferredSize(new Dimension(80, 30));
            declineButton.setPreferredSize(new Dimension(80, 30));
            notificationPanel.add(acceptButton);
            notificationPanel.add(declineButton);
            acceptButton.addActionListener(e -> {
            try {
                f.acceptFriendRequest(targetUser, m.getUser(((FriendRequests) notification).secondUser));
                manager.delete(notification.getNotificationId());
            } catch (IOException ex) {
                Logger.getLogger(Notifications.class.getName()).log(Level.SEVERE, null, ex);
            }
            loadNotifications(); 
        });
            declineButton.addActionListener(e -> {
            try {
                f.declineFriendRequest(targetUser, m.getUser(((FriendRequests) notification).secondUser));
                manager.delete(notification.getNotificationId());
            } catch (IOException ex) {
                Logger.getLogger(Notifications.class.getName()).log(Level.SEVERE, null, ex);
            }
            loadNotifications(); 
        });
        }
        deleteButton.addActionListener(e -> {
            try {
                manager.delete(notification.getNotificationId());
            } catch (IOException ex) {
                Logger.getLogger(Notifications.class.getName()).log(Level.SEVERE, null, ex);
            }
            loadNotifications(); 
        });
        notificationPanel.add(deleteButton);
        
        jPanel1.add(notificationPanel);
    }
    jPanel1.revalidate();
    jPanel1.repaint();
}



    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notifications.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notifications.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notifications.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notifications.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
